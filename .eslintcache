[{"D:\\STUDIA_UE\\semestr_1\\US\\Projekt\\happy-mail-ui-2\\src\\index.js":"1","D:\\STUDIA_UE\\semestr_1\\US\\Projekt\\happy-mail-ui-2\\src\\App.js":"2","D:\\STUDIA_UE\\semestr_1\\US\\Projekt\\happy-mail-ui-2\\src\\store.js":"3","D:\\STUDIA_UE\\semestr_1\\US\\Projekt\\happy-mail-ui-2\\src\\epic.js":"4","D:\\STUDIA_UE\\semestr_1\\US\\Projekt\\happy-mail-ui-2\\src\\reducers\\userReducer.js":"5","D:\\STUDIA_UE\\semestr_1\\US\\Projekt\\happy-mail-ui-2\\src\\epics\\user\\userLogIn.js":"6","D:\\STUDIA_UE\\semestr_1\\US\\Projekt\\happy-mail-ui-2\\src\\components\\MainView\\index.jsx":"7","D:\\STUDIA_UE\\semestr_1\\US\\Projekt\\happy-mail-ui-2\\src\\actions\\index.js":"8","D:\\STUDIA_UE\\semestr_1\\US\\Projekt\\happy-mail-ui-2\\src\\actions\\user.js":"9","D:\\STUDIA_UE\\semestr_1\\US\\Projekt\\happy-mail-ui-2\\src\\components\\HomeView\\index.jsx":"10","D:\\STUDIA_UE\\semestr_1\\US\\Projekt\\happy-mail-ui-2\\src\\components\\LoginView\\index.jsx":"11","D:\\STUDIA_UE\\semestr_1\\US\\Projekt\\happy-mail-ui-2\\src\\components\\ProfileView\\index.jsx":"12"},{"size":438,"mtime":1609595028046,"results":"13","hashOfConfig":"14"},{"size":181,"mtime":1609658960980,"results":"15","hashOfConfig":"14"},{"size":1185,"mtime":1609595028047,"results":"16","hashOfConfig":"14"},{"size":348,"mtime":1609595028045,"results":"17","hashOfConfig":"14"},{"size":620,"mtime":1609678464934,"results":"18","hashOfConfig":"14"},{"size":1035,"mtime":1609678966569,"results":"19","hashOfConfig":"14"},{"size":4350,"mtime":1609679989325,"results":"20","hashOfConfig":"14"},{"size":24,"mtime":1609595028042,"results":"21","hashOfConfig":"14"},{"size":557,"mtime":1609678921929,"results":"22","hashOfConfig":"14"},{"size":265,"mtime":1609667354870,"results":"23","hashOfConfig":"14"},{"size":5602,"mtime":1609678832360,"results":"24","hashOfConfig":"14"},{"size":526,"mtime":1609678553175,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1osqspl",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"D:\\STUDIA_UE\\semestr_1\\US\\Projekt\\happy-mail-ui-2\\src\\index.js",[],["52","53"],"D:\\STUDIA_UE\\semestr_1\\US\\Projekt\\happy-mail-ui-2\\src\\App.js",[],"D:\\STUDIA_UE\\semestr_1\\US\\Projekt\\happy-mail-ui-2\\src\\store.js",[],"D:\\STUDIA_UE\\semestr_1\\US\\Projekt\\happy-mail-ui-2\\src\\epic.js",[],"D:\\STUDIA_UE\\semestr_1\\US\\Projekt\\happy-mail-ui-2\\src\\reducers\\userReducer.js",[],"D:\\STUDIA_UE\\semestr_1\\US\\Projekt\\happy-mail-ui-2\\src\\epics\\user\\userLogIn.js",[],"D:\\STUDIA_UE\\semestr_1\\US\\Projekt\\happy-mail-ui-2\\src\\components\\MainView\\index.jsx",["54"],"D:\\STUDIA_UE\\semestr_1\\US\\Projekt\\happy-mail-ui-2\\src\\actions\\index.js",[],"D:\\STUDIA_UE\\semestr_1\\US\\Projekt\\happy-mail-ui-2\\src\\actions\\user.js",[],"D:\\STUDIA_UE\\semestr_1\\US\\Projekt\\happy-mail-ui-2\\src\\components\\HomeView\\index.jsx",[],"D:\\STUDIA_UE\\semestr_1\\US\\Projekt\\happy-mail-ui-2\\src\\components\\LoginView\\index.jsx",["55","56"],"import React, {useState} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {userLogIn} from '../../actions'\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100%',\r\n    },\r\n    image: {\r\n        backgroundImage: 'url(https://images.unsplash.com/photo-1479920252409-6e3d8e8d4866?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1950&q=80)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'auto 100%',\r\n        backgroundPosition: 'left bottom',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    formWrapper: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    imageIcon: {\r\n        height: '100%'\r\n    },\r\n    iconRoot: {\r\n        display: 'inline-block',\r\n        verticalAlign: 'middle',\r\n        height: 85,\r\n        width: 85\r\n    },\r\n    marginTop: {\r\n        marginTop: '1em',\r\n    }\r\n}));\r\n\r\nconst LoginView = () => {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleLogIn = () => {\r\n        dispatch(userLogIn({username, password}));\r\n    }\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            className={classes.root}>\r\n            <CssBaseline/>\r\n\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                <div className={classes.paper}>\r\n                    <Icon fontSize=\"large\" classes={{root: classes.iconRoot}}>\r\n                        <img className={classes.imageIcon} src='/assets/images/emoji-cute.svg'/>\r\n                    </Icon>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign in\r\n                    </Typography>\r\n                    <div className={classes.formWrapper}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"username\"\r\n                            label=\"Username\"\r\n                            name=\"username\"\r\n                            type=\"text\"\r\n                            value={username}\r\n                            onChange={(event) => {\r\n                                setUsername(event.target.value)\r\n                            }}\r\n                            autoFocus\r\n                        />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            value={password}\r\n                            onChange={(event) => {\r\n                                setPassword(event.target.value)\r\n                            }}\r\n                        />\r\n\r\n                        <Grid container className={classes.marginTop}>\r\n                            <Grid item xs>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox value=\"remember\" color=\"primary\"/>}\r\n                                    label=\"Remember me\"\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={handleLogIn}>\r\n                                    Sign In\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid container className={classes.marginTop}>\r\n                            <Grid item xs>\r\n                                <Link href=\"#\" variant=\"body2\">\r\n                                    Forgot password?\r\n                                </Link>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Link href=\"#\" variant=\"body2\">\r\n                                    {\"Don't have an account? Sign Up\"}\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </div>\r\n            </Grid>\r\n\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image}/>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default LoginView\r\n","D:\\STUDIA_UE\\semestr_1\\US\\Projekt\\happy-mail-ui-2\\src\\components\\ProfileView\\index.jsx",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":80,"column":33,"nodeType":"63","endLine":80,"endColumn":113},{"ruleId":"64","severity":1,"message":"65","line":62,"column":11,"nodeType":"66","messageId":"67","endLine":62,"endColumn":23},{"ruleId":"61","severity":1,"message":"62","line":75,"column":25,"nodeType":"63","endLine":75,"endColumn":97},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'handleLogOut' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]