{"version":3,"sources":["components/ProfileView/sideNavPanel.jsx","actions/user.js","actions/messages.js","components/ProfileView/inboxMessage.jsx","components/ProfileView/inbox.jsx","components/ProfileView/newMessage.jsx","components/ProfileView/index.jsx","components/HomeView/index.jsx","components/LoginView/index.jsx","components/MainView/index.jsx","App.js","epics/user/userLogIn.js","epics/messages/getMessages.js","epics/messages/sendMessage.js","epic.js","reducers/userReducer.js","reducers/messagesReducer.js","store.js","index.js"],"names":["useStyles","makeStyles","theme","link","textDecoration","color","newMessageLink","backgroundColor","dividerMargin","marginTop","spacing","SideNavPanel","classes","List","className","to","ListItem","button","ListItemIcon","ListItemText","primary","Divider","variant","orientation","USER_LOG_IN","USER_LOG_IN_SUCCESS","USER_LOG_IN_FAILURE","USER_LOG_OUT","GET_MESSAGES","GET_MESSAGES_SUCCESS","GET_MESSAGES_FAILURE","SEND_MESSAGE","messageUser","width","minWidth","messageText","marginRight","marginLeft","maxWidth","messageDate","iconTable","display","verticalAlign","height","imageIcon","alertColor","alertColorContent","InboxMessage","props","item","useState","open","setOpen","isToxic","canShow","setCanShow","showMessage","TableRow","TableCell","align","IconButton","aria-label","size","onClick","Typography","noWrap","senderUsername","content","stringDate","split","date","time","getDate","createdAt","id","style","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","margin","gutterBottom","component","Icon","fontSize","root","src","alt","iconRoot","Inbox","dispatch","useDispatch","messagesData","useSelector","state","messages","userData","user","useEffect","token","jwtToken","type","Array","isArray","length","Table","TableHead","TableBody","slice","reverse","map","paper","padding","overflow","flexDirection","minHeight","maxHeight","NewMessage","recipientUsername","setRecipientUsername","message","setMessage","TextField","fullWidth","disabled","label","name","value","username","required","autoFocus","onChange","event","target","multiline","rows","rowsMax","Grid","container","xs","Button","messageData","endIcon","profileWrapper","firstPanel","secondPanel","ProfileView","CssBaseline","Paper","path","HomeView","image","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","alignItems","formWrapper","LoginView","setUsername","password","setPassword","sm","md","elevation","square","autoComplete","FormControlLabel","control","Checkbox","authData","Link","fullBodyHeight","appBar","flexGrow","title","logBar","userName","MainView","handleLogOut","AppBar","position","Toolbar","grow","isLoggedIn","App","handleSuccess","response","res","userLogIn","action$","state$","ajax","pipe","ofType","withLatestFrom","mergeMap","action","method","url","config","apiUrl","headers","body","push","catchError","err","ActionsObservable","of","getMessages","Authorization","sendMessage","combineEpics","defaultUserState","userReducer","accessToken","defaultMessagesState","messagesReducer","history","createBrowserHistory","getStore","epicMiddleware","createEpicMiddleware","dependencies","middlewares","routerMiddleware","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","rootReducer","combineReducers","router","connectRouter","store","createStore","run","epic","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.070bb5b1.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n  Link,\r\n} from 'react-router-dom';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport TelegramIcon from '@material-ui/icons/Telegram';\r\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport ContactMailIcon from '@material-ui/icons/ContactMail';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: 'black',\r\n  },\r\n  newMessageLink: {\r\n    backgroundColor: 'gold',\r\n  },\r\n  dividerMargin: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst SideNavPanel = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <List>\r\n      <div>\r\n        <Link className={classes.link} to=\"/write\">\r\n          <ListItem button className={classes.newMessageLink}>\r\n            <ListItemIcon>\r\n              <CreateIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"New message\" />\r\n          </ListItem>\r\n        </Link>\r\n\r\n        <Link className={classes.link} to=\"/inbox\">\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <MailOutlineIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Inbox\" />\r\n          </ListItem>\r\n        </Link>\r\n\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <DeleteOutlineIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Trash\" />\r\n        </ListItem>\r\n\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <TelegramIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Sent\" />\r\n        </ListItem>\r\n\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <NotInterestedIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Spam\" />\r\n        </ListItem>\r\n\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <DraftsIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Drafts\" />\r\n        </ListItem>\r\n\r\n        <Divider className={classes.dividerMargin} variant=\"fullWidth\" orientation=\"horizontal\" />\r\n\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <ContactMailIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Contacts\" />\r\n        </ListItem>\r\n\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <SettingsIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Settings\" />\r\n        </ListItem>\r\n      </div>\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default SideNavPanel;\r\n","export const USER_LOG_IN = 'USER_LOG_IN';\r\nexport const userLogIn = (authData) => ({\r\n  type: USER_LOG_IN,\r\n  ...authData,\r\n});\r\n\r\nexport const USER_LOG_IN_SUCCESS = 'USER_LOG_IN_SUCCESS';\r\nexport const userLogInSuccess = (res) => ({\r\n  type: USER_LOG_IN_SUCCESS,\r\n  ...res.response,\r\n});\r\n\r\nexport const USER_LOG_IN_FAILURE = 'USER_LOG_IN_FAILURE';\r\nexport const userLogInFailure = (res) => ({\r\n  type: USER_LOG_IN_FAILURE,\r\n  response: res.response,\r\n});\r\n\r\nexport const USER_LOG_OUT = 'USER_LOG_OUT';\r\nexport const userLogOut = () => ({\r\n  type: USER_LOG_OUT,\r\n});\r\n","export const GET_MESSAGES = 'GET_MESSAGES';\r\nexport const getMessages = (token) => ({\r\n  type: GET_MESSAGES,\r\n  token,\r\n});\r\n\r\nexport const GET_MESSAGES_SUCCESS = 'GET_MESSAGES_SUCCESS';\r\nexport const getMessagesSuccess = (res) => ({\r\n  type: GET_MESSAGES_SUCCESS,\r\n  response: res.response,\r\n});\r\n\r\nexport const GET_MESSAGES_FAILURE = 'GET_MESSAGES_FAILURE';\r\nexport const getMessagesFailure = (res) => ({\r\n  type: GET_MESSAGES_FAILURE,\r\n  response: res.response,\r\n});\r\n\r\nexport const SEND_MESSAGE = 'SEND_MESSAGE';\r\nexport const sendMessage = (messageData) => ({\r\n  type: SEND_MESSAGE,\r\n  ...messageData,\r\n});\r\n\r\nexport const SEND_MESSAGE_FAILURE = 'SEND_MESSAGE_FAILURE';\r\nexport const sendMessageFailure = (res) => ({\r\n  type: SEND_MESSAGE_FAILURE,\r\n  response: res.response,\r\n});\r\n","import React, { useState } from 'react';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Box from '@material-ui/core/Box';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  messageUser: {\r\n    width: '150px',\r\n    minWidth: '150px',\r\n  },\r\n  messageText: {\r\n    marginRight: 10,\r\n    marginLeft: 10,\r\n    maxWidth: '40vw',\r\n    width: '40vw',\r\n  },\r\n  messageDate: {\r\n    marginRight: 0,\r\n    marginLeft: 'auto',\r\n    width: '150px',\r\n    minWidth: '150px',\r\n  },\r\n  iconTable: {\r\n    display: 'inline-block',\r\n    verticalAlign: 'middle',\r\n    marginRight: '0.5em',\r\n    height: '2em',\r\n    width: '2em',\r\n  },\r\n  imageIcon: {\r\n    height: '100%',\r\n  },\r\n  alertColor: {\r\n    color: '#ff1744 !important',\r\n  },\r\n  alertColorContent: {\r\n    color: '#fbc02d !important',\r\n    textDecoration: 'underline',\r\n    '&:hover': {\r\n      color: '#f57f17 !important',\r\n    },\r\n  },\r\n}));\r\n\r\nfunction InboxMessage(props) {\r\n  const classes = useStyles();\r\n  const { item } = props;\r\n  const [open, setOpen] = useState(false);\r\n  const [canShow, setCanShow] = useState(!item.isToxic);\r\n\r\n  const openMessage = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const showMessage = () => {\r\n    setCanShow(!canShow);\r\n  };\r\n\r\n  const getDate = (stringDate) => {\r\n    const split = stringDate.split('T');\r\n    const date = split[0];\r\n    const time = split[1].split('.')[0];\r\n    return `${date} ${time}`;\r\n  };\r\n\r\n  const toxicAlert = () => (\r\n    <>\r\n      <Typography\r\n        noWrap\r\n        className={classes.alertColorContent}\r\n        variant=\"body1\"\r\n        align=\"center\"\r\n        onClick={showMessage}\r\n      >\r\n        <Icon fontSize=\"default\" classes={{ root: classes.iconTable }}>\r\n          <img className={classes.imageIcon} src=\"/assets/images/emoji-silent.svg\" alt=\"Silent emoji\" />\r\n        </Icon>\r\n        Click here if you are sure you want to see the message.\r\n      </Typography>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <TableRow key={item.id}>\r\n        <TableCell align=\"left\" width=\"3em\">\r\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={openMessage}>\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell>\r\n          <Typography noWrap className={classes.messageUser} variant=\"body1\">\r\n            {item.senderUsername}\r\n          </Typography>\r\n        </TableCell>\r\n        <TableCell>\r\n          <Typography noWrap className={classes.messageText} variant=\"body2\">\r\n            {\r\n              item.isToxic\r\n                ? (<span className={classes.alertColor}>This message may be toxic!</span>)\r\n                : item.content\r\n            }\r\n          </Typography>\r\n        </TableCell>\r\n        <TableCell align=\"right\">\r\n          <Typography noWrap className={classes.messageDate} variant=\"body2\">\r\n            {getDate(item.createdAt)}\r\n          </Typography>\r\n        </TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box margin={1}>\r\n              {\r\n                canShow\r\n                  ? (\r\n                    <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                      {item.content}\r\n                    </Typography>\r\n                  ) : toxicAlert()\r\n              }\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default InboxMessage;\r\n","import React, { useEffect } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Typography } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport { getMessages } from '../../actions';\r\nimport InboxMessage from './inboxMessage';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  messageUser: {\r\n    width: '150px',\r\n    minWidth: '150px',\r\n  },\r\n  messageText: {\r\n    marginRight: 10,\r\n    marginLeft: 10,\r\n    maxWidth: '40vw',\r\n    width: '40vw',\r\n  },\r\n  messageDate: {\r\n    marginRight: 0,\r\n    marginLeft: 'auto',\r\n    width: '150px',\r\n    minWidth: '150px',\r\n  },\r\n  iconRoot: {\r\n    display: 'inline-block',\r\n    verticalAlign: 'middle',\r\n    marginLeft: '0.5em',\r\n    height: 50,\r\n    width: 50,\r\n  },\r\n  imageIcon: {\r\n    height: '100%',\r\n  },\r\n}));\r\n\r\nconst Inbox = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const messagesData = useSelector((state) => state.messages);\r\n  const userData = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    dispatch(getMessages(userData.jwtToken));\r\n  }, []);\r\n\r\n  return !!messagesData\r\n        && !!Array.isArray(messagesData.messages)\r\n        && !!messagesData.messages.length\r\n    ? (\r\n      <Table size=\"small\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"left\" width=\"3em\" />\r\n            <TableCell align=\"left\">\r\n              <Typography noWrap className={classes.messageUser} variant=\"h6\">\r\n                Sender\r\n              </Typography>\r\n            </TableCell>\r\n            <TableCell>\r\n              <Typography noWrap className={classes.messageText} variant=\"h6\">\r\n                Message\r\n              </Typography>\r\n            </TableCell>\r\n            <TableCell align=\"right\">\r\n              <Typography noWrap className={classes.messageDate} variant=\"h6\">\r\n                Date\r\n              </Typography>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {messagesData.messages.slice(0).reverse().map((item) => (<InboxMessage key={item.id} item={item} />))}\r\n        </TableBody>\r\n      </Table>\r\n\r\n    ) : (\r\n      <Typography variant=\"h6\" align=\"center\">\r\n        Your inbox is empty.\r\n        <Icon fontSize=\"default\" classes={{ root: classes.iconRoot }}>\r\n          <img className={classes.imageIcon} src=\"/assets/images/emoji-awkward.svg\" alt=\"Awkward emoji\" />\r\n        </Icon>\r\n      </Typography>\r\n    );\r\n};\r\n\r\nexport default Inbox;\r\n","/* eslint-disable react/jsx-boolean-value */\r\nimport React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { sendMessage } from '../../actions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n    minWidth: '100%',\r\n    minHeight: '100%',\r\n    maxHeight: '100%',\r\n    height: '100%',\r\n  },\r\n}));\r\n\r\nconst NewMessage = () => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const userData = useSelector((state) => state.user);\r\n\r\n  const [recipientUsername, setRecipientUsername] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleSendMessage = () => {\r\n    dispatch(sendMessage({ token: userData.jwtToken, recipientUsername, message }));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.paper}>\r\n      <TextField\r\n        fullWidth\r\n        disabled={true}\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        id=\"sender\"\r\n        label=\"Sender\"\r\n        name=\"sender\"\r\n        type=\"text\"\r\n        value={userData.username}\r\n      />\r\n      <TextField\r\n        required\r\n        fullWidth\r\n        autoFocus={true}\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        name=\"recipient\"\r\n        label=\"Recipient\"\r\n        type=\"recipient\"\r\n        id=\"recipient\"\r\n        value={recipientUsername}\r\n        onChange={(event) => {\r\n          setRecipientUsername(event.target.value);\r\n        }}\r\n      />\r\n      <TextField\r\n        required\r\n        fullWidth\r\n        multiline\r\n        rows={12}\r\n        rowsMax={12}\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        name=\"message\"\r\n        label=\"Message\"\r\n        type=\"message\"\r\n        id=\"message\"\r\n        value={message}\r\n        onChange={(event) => {\r\n          setMessage(event.target.value);\r\n        }}\r\n      />\r\n\r\n      <Grid container className={classes.marginTop}>\r\n        <Grid item xs>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            onClick={handleSendMessage}\r\n            endIcon={<Icon>send</Icon>}\r\n          >\r\n            Send\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewMessage;\r\n","import React from 'react';\r\nimport {\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SideNavPanel from './sideNavPanel';\r\nimport Inbox from './inbox';\r\nimport NewMessage from './newMessage';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    height: '100%',\r\n    maxHeight: '100%',\r\n    maxWidth: '100%',\r\n  },\r\n  profileWrapper: {\r\n    display: 'flex',\r\n    overflow: 'hidden',\r\n    flexDirection: 'row',\r\n  },\r\n  firstPanel: {\r\n    padding: theme.spacing(2),\r\n    width: '250px',\r\n    backgroundColor: 'LightGray',\r\n  },\r\n  secondPanel: {\r\n    padding: theme.spacing(2),\r\n    width: 'calc(100% - 250px)',\r\n    maxHeight: '100%',\r\n    overflow: 'auto',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n    minWidth: '100%',\r\n    minHeight: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n}));\r\n\r\nconst ProfileView = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid container className={classes.profileWrapper}>\r\n        <Grid item className={classes.firstPanel}>\r\n          <SideNavPanel />\r\n        </Grid>\r\n        <Grid item className={classes.secondPanel}>\r\n          <Paper className={classes.paper}>\r\n            <Switch>\r\n              <Route path=\"/write\">\r\n                <NewMessage />\r\n              </Route>\r\n              <Route path={['/inbox', '/']}>\r\n                <Inbox />\r\n              </Route>\r\n            </Switch>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileView;\r\n","import React from 'react';\r\n\r\nconst HomeView = () => (\r\n  <div className=\"Box\">\r\n    <p>\r\n      Home page content\r\n    </p>\r\n    <p>\r\n      Displayed when user is not logged in.\r\n    </p>\r\n  </div>\r\n);\r\n\r\nexport default HomeView;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { userLogIn } from '../../actions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%',\r\n  },\r\n  image: {\r\n    // eslint-disable-next-line max-len\r\n    backgroundImage: 'url(https://images.unsplash.com/photo-1479920252409-6e3d8e8d4866?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1950&q=80)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'auto 100%',\r\n    backgroundPosition: 'left bottom',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  formWrapper: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  imageIcon: {\r\n    height: '100%',\r\n  },\r\n  iconRoot: {\r\n    display: 'inline-block',\r\n    verticalAlign: 'middle',\r\n    height: 85,\r\n    width: 85,\r\n  },\r\n  marginTop: {\r\n    marginTop: '1em',\r\n  },\r\n}));\r\n\r\nconst LoginView = () => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleLogIn = () => {\r\n    dispatch(userLogIn({ username, password }));\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      className={classes.root}\r\n    >\r\n      <CssBaseline />\r\n\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Icon fontSize=\"large\" classes={{ root: classes.iconRoot }}>\r\n            <img className={classes.imageIcon} src=\"/assets/images/emoji-cute.svg\" alt=\"Cute emoji\" />\r\n          </Icon>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <div className={classes.formWrapper}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"username\"\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              type=\"text\"\r\n              value={username}\r\n              onChange={(event) => {\r\n                setUsername(event.target.value);\r\n              }}\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={password}\r\n              onChange={(event) => {\r\n                setPassword(event.target.value);\r\n              }}\r\n            />\r\n\r\n            <Grid container className={classes.marginTop}>\r\n              <Grid item xs>\r\n                <FormControlLabel\r\n                  control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                  label=\"Remember me\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleLogIn}\r\n                >\r\n                  Sign In\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container className={classes.marginTop}>\r\n              <Grid item xs>\r\n                <Link to=\"/#\" variant=\"body2\">Forgot password?</Link>\r\n              </Grid>\r\n              <Grid item>\r\n                {/* eslint-disable-next-line react/no-unescaped-entities */}\r\n                <Link to=\"/#\" variant=\"body2\">Don't have an account? Sign Up</Link>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </div>\r\n      </Grid>\r\n\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default LoginView;\r\n","import React from 'react';\r\nimport {\r\n  Switch,\r\n  Route,\r\n  Link,\r\n} from 'react-router-dom';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ProfileView from '../ProfileView';\r\nimport HomeView from '../HomeView';\r\nimport LoginView from '../LoginView';\r\nimport { userLogOut } from '../../actions';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100vh',\r\n    width: '100vw',\r\n    maxHeight: '100vh',\r\n    maxWidth: '100vw',\r\n    overflow: 'hidden',\r\n  },\r\n  fullBodyHeight: {\r\n    height: 'calc(100% - 64px)',\r\n    maxHeight: 'calc(100% - 64px)',\r\n  },\r\n  appBar: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  logBar: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginRight: 0,\r\n    marginLeft: 'auto',\r\n    color: 'white',\r\n  },\r\n  userName: {\r\n    marginRight: '1em',\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: 'white',\r\n  },\r\n  imageIcon: {\r\n    height: '100%',\r\n  },\r\n  iconRoot: {\r\n    display: 'inline-block',\r\n    verticalAlign: 'middle',\r\n  },\r\n}));\r\n\r\nconst MainView = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const userData = useSelector((state) => state.user);\r\n\r\n  const handleLogOut = () => {\r\n    dispatch(userLogOut());\r\n  };\r\n\r\n  const navBar = () => (\r\n    <AppBar position=\"static\">\r\n      <Toolbar className={classes.appBar}>\r\n        <Typography variant=\"h4\" className={classes.title}>\r\n          <Link className={classes.link} to=\"/\">\r\n            <Icon fontSize=\"large\" classes={{ root: classes.iconRoot }}>\r\n              <img className={classes.imageIcon} src=\"/assets/images/emoji-happy-smiley.svg\" alt=\"Happy emoji\" />\r\n            </Icon>\r\n            HappyMail\r\n          </Link>\r\n        </Typography>\r\n\r\n        <div className={classes.grow} />\r\n        {userData.isLoggedIn\r\n          ? (\r\n            <div className={classes.logBar}>\r\n              <Typography variant=\"body1\">\r\n                <span className={classes.userName}>\r\n                  User:\r\n                  {' '}\r\n                  {userData.username}\r\n                </span>\r\n              </Typography>\r\n              <Typography variant=\"h6\" onClick={handleLogOut}>\r\n                <Link className={classes.link} to=\"/\">\r\n                  Log Out\r\n                </Link>\r\n              </Typography>\r\n            </div>\r\n          )\r\n          : (\r\n            <Typography variant=\"h6\" className={classes.logBar}>\r\n              <Link className={classes.link} to=\"/login\">\r\n                Log In\r\n              </Link>\r\n            </Typography>\r\n          )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n\r\n  const pageBody = () => (\r\n    <Switch>\r\n      <Route path=\"/login\">\r\n        <LoginView />\r\n      </Route>\r\n      <Route path=\"/\">\r\n        {userData.isLoggedIn\r\n          ? (\r\n            <ProfileView />\r\n          )\r\n          : (\r\n            <HomeView />\r\n          )}\r\n      </Route>\r\n    </Switch>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {navBar()}\r\n      <main className={classes.fullBodyHeight}>\r\n        {pageBody()}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainView;\r\n","import './App.css';\r\n\r\nimport React from 'react';\r\nimport MainView from './components/MainView';\r\n\r\nconst App = () => (\r\n  <MainView />\r\n);\r\n\r\nexport default App;\r\n","import { ActionsObservable, ofType } from 'redux-observable';\r\nimport { withLatestFrom, mergeMap, catchError } from 'rxjs/operators';\r\nimport { push } from 'connected-react-router';\r\nimport { USER_LOG_IN, userLogInSuccess, userLogInFailure } from '../../actions';\r\nimport config from '../../config.json';\r\n\r\nconst handleSuccess = (response) => userLogInSuccess(response);\r\n\r\nconst redirect = () => push('/');\r\n\r\nconst createRequest = (username, password) => ({\r\n  method: 'POST',\r\n  url: `${config.apiUrl}auth/signin`,\r\n  headers: { 'Content-Type': 'application/json' },\r\n  body: {\r\n    username,\r\n    password,\r\n  },\r\n});\r\n\r\nconst userLogIn = (action$, state$, { ajax }) => action$.pipe(\r\n  ofType(USER_LOG_IN),\r\n  withLatestFrom(state$),\r\n  mergeMap(([action]) => ajax(createRequest(action.username, action.password)).pipe(\r\n    mergeMap((res) => [handleSuccess(res), redirect()]),\r\n    catchError((err) => ActionsObservable.of(userLogInFailure(err))),\r\n  )),\r\n);\r\n\r\nexport default userLogIn;\r\n","import { ActionsObservable, ofType } from 'redux-observable';\r\nimport { withLatestFrom, mergeMap, catchError } from 'rxjs/operators';\r\nimport { GET_MESSAGES, getMessagesSuccess, getMessagesFailure } from '../../actions';\r\nimport config from '../../config.json';\r\n\r\nconst handleSuccess = (response) => getMessagesSuccess(response);\r\n\r\nconst createRequest = (token) => ({\r\n  method: 'GET',\r\n  url: `${config.apiUrl}messages`,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    Authorization: `Bearer ${token}`,\r\n  },\r\n});\r\n\r\nconst getMessages = (action$, state$, { ajax }) => action$.pipe(\r\n  ofType(GET_MESSAGES),\r\n  withLatestFrom(state$),\r\n  mergeMap(([action]) => ajax(createRequest(action.token)).pipe(\r\n    mergeMap((res) => [handleSuccess(res)]),\r\n    catchError((err) => ActionsObservable.of(getMessagesFailure(err))),\r\n  )),\r\n);\r\n\r\nexport default getMessages;\r\n","import { ActionsObservable, ofType } from 'redux-observable';\r\nimport { withLatestFrom, mergeMap, catchError } from 'rxjs/operators';\r\nimport { push } from 'connected-react-router';\r\nimport { SEND_MESSAGE, sendMessageFailure } from '../../actions';\r\nimport config from '../../config.json';\r\n\r\nconst redirect = () => push('/');\r\n\r\nconst createRequest = (token, recipientUsername, content) => ({\r\n  method: 'POST',\r\n  url: `${config.apiUrl}messages/send`,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    Authorization: `Bearer ${token}`,\r\n  },\r\n  body: {\r\n    recipientUsername,\r\n    content,\r\n  },\r\n});\r\n\r\nconst sendMessage = (action$, state$, { ajax }) => action$.pipe(\r\n  ofType(SEND_MESSAGE),\r\n  withLatestFrom(state$),\r\n  mergeMap(([action]) => ajax(createRequest(action.token, action.recipientUsername, action.message)).pipe(\r\n    mergeMap(() => [redirect()]),\r\n    catchError((err) => ActionsObservable.of(sendMessageFailure(err))),\r\n  )),\r\n);\r\n\r\nexport default sendMessage;\r\n","import { combineEpics } from 'redux-observable';\r\n\r\nimport userLogIn from './epics/user/userLogIn';\r\nimport getMessages from './epics/messages/getMessages';\r\nimport sendMessage from './epics/messages/sendMessage';\r\n\r\nexport default combineEpics(userLogIn, getMessages, sendMessage);\r\n","import { USER_LOG_IN_SUCCESS, USER_LOG_IN_FAILURE, USER_LOG_OUT } from '../actions';\r\n\r\nconst defaultUserState = {\r\n  isLoggedIn: false,\r\n  username: null,\r\n  jwtToken: null,\r\n};\r\n\r\nconst userReducer = (state = defaultUserState, action) => {\r\n  switch (action.type) {\r\n    case USER_LOG_IN_SUCCESS:\r\n      return {\r\n        isLoggedIn: true,\r\n        username: action.username,\r\n        jwtToken: action.accessToken,\r\n      };\r\n\r\n    case USER_LOG_IN_FAILURE:\r\n      return defaultUserState;\r\n\r\n    case USER_LOG_OUT:\r\n      return defaultUserState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import { GET_MESSAGES_SUCCESS, GET_MESSAGES_FAILURE, USER_LOG_OUT } from '../actions';\r\n\r\nconst defaultMessagesState = {\r\n  messages: [],\r\n};\r\n\r\nconst messagesReducer = (state = defaultMessagesState, action) => {\r\n  switch (action.type) {\r\n    case GET_MESSAGES_SUCCESS:\r\n      return {\r\n        messages: action.response,\r\n      };\r\n\r\n    case GET_MESSAGES_FAILURE:\r\n      return defaultMessagesState;\r\n\r\n    case USER_LOG_OUT:\r\n      return defaultMessagesState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default messagesReducer;\r\n","import {\r\n  combineReducers, createStore, applyMiddleware, compose,\r\n} from 'redux';\r\nimport { createEpicMiddleware } from 'redux-observable';\r\nimport { ajax } from 'rxjs/ajax';\r\n\r\nimport { createBrowserHistory } from 'history';\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\r\nimport epic from './epic';\r\n\r\nimport user from './reducers/userReducer';\r\nimport messages from './reducers/messagesReducer';\r\n\r\nexport const history = createBrowserHistory();\r\n\r\n// eslint-disable-next-line max-len\r\nexport const createRootReducer = (history) => combineReducers({ router: connectRouter(history), user, messages });\r\n\r\nconst getStore = () => {\r\n  const epicMiddleware = createEpicMiddleware({ dependencies: { ajax } });\r\n\r\n  const middlewares = [routerMiddleware(history), epicMiddleware];\r\n\r\n  const composeEnhancers = typeof window === 'object'\r\n    && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\n\r\n  const enhancer = composeEnhancers(applyMiddleware(...middlewares));\r\n\r\n  const rootReducer = createRootReducer(history);\r\n\r\n  const initialState = {};\r\n\r\n  const store = createStore(rootReducer, initialState, enhancer);\r\n\r\n  epicMiddleware.run(epic);\r\n\r\n  return store;\r\n};\r\n\r\nexport default getStore;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport App from './App';\r\nimport getStore, { history } from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={getStore()}>\r\n    <ConnectedRouter history={history}>\r\n      <App />\r\n    </ConnectedRouter>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}